{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21668,"status":"ok","timestamp":1753062440047,"user":{"displayName":"Aarush Kumar","userId":"16118659533235147067"},"user_tz":240},"id":"bxhGyuBtx8BV","outputId":"0f36267e-27ab-4c37-96c2-85b0e2d72c42"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8Zr7Ua7m0A6-"},"outputs":[],"source":["train_dir = '/content/drive/My Drive/dental/Dental_Radiography/train'\n","val_dir = '/content/drive/My Drive/dental/Dental_Radiography/valid'\n","test_dir  = '/content/drive/My Drive/dental/Dental_Radiography/test'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_WySx7BenCH-"},"outputs":[],"source":["import os\n","import random\n","import shutil\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout, BatchNormalization"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21995,"status":"ok","timestamp":1753062546124,"user":{"displayName":"Aarush Kumar","userId":"16118659533235147067"},"user_tz":240},"id":"nROfvjjUnEP1","outputId":"aaadec25-d52d-4112-ccb0-12b9de732b41"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 25136 images belonging to 5 classes.\n","Found 2812 images belonging to 5 classes.\n","Found 1649 images belonging to 5 classes.\n"]}],"source":["\n","\n","\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","\n","\n","train_datagen = ImageDataGenerator(\n","    rescale=1./255,\n","    rotation_range=20,\n","    width_shift_range=0.1,\n","    height_shift_range=0.1,\n","    shear_range=0.1,\n","    zoom_range=0.1,\n","    horizontal_flip=True,\n","    fill_mode='nearest',\n",")\n","\n","test_datagen = ImageDataGenerator(\n","    rescale=1./255,\n",")\n","\n","\n","train_generator = train_datagen.flow_from_directory(\n","    directory=train_dir,\n","    target_size=(150, 150),\n","    batch_size=32,\n","    class_mode='categorical',\n","\n","    shuffle=True\n",")\n","\n","val_generator = test_datagen.flow_from_directory(\n","    directory=val_dir,\n","    target_size=(150, 150),\n","    batch_size=32,\n","    class_mode='categorical',\n","\n","    shuffle=False\n",")\n","\n","test_generator = test_datagen.flow_from_directory(\n","    test_dir,\n","    target_size=(150, 150),\n","    batch_size=32,\n","    class_mode='categorical',\n","    shuffle=False\n",")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2350,"status":"ok","timestamp":1753062556143,"user":{"displayName":"Aarush Kumar","userId":"16118659533235147067"},"user_tz":240},"id":"E2cMIKIFpyHu","outputId":"4f85ee76-bc3f-4f84-de43-e8a38f00b872"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]}],"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout, BatchNormalization\n","from tensorflow.keras.optimizers import Adam\n","num_classes = train_generator.num_classes\n","\n","input_shape = (150, 150, 3)\n","\n","model = Sequential([\n","    Conv2D(32, (3, 3), activation='relu', padding='same', input_shape=input_shape),\n","    BatchNormalization(),\n","    Conv2D(32, (3, 3), activation='relu', padding='same'),\n","    BatchNormalization(),\n","    MaxPooling2D(pool_size=(2, 2)),\n","    Dropout(0.25),\n","\n","    Conv2D(64, (3, 3), activation='relu', padding='same'),\n","    BatchNormalization(),\n","    Conv2D(64, (3, 3), activation='relu', padding='same'),\n","    BatchNormalization(),\n","    MaxPooling2D(pool_size=(2, 2)),\n","    Dropout(0.3),\n","\n","    Conv2D(128, (3, 3), activation='relu', padding='same'),\n","    BatchNormalization(),\n","    Conv2D(128, (3, 3), activation='relu', padding='same'),\n","    BatchNormalization(),\n","    MaxPooling2D(pool_size=(2, 2)),\n","    Dropout(0.4),\n","\n","    Conv2D(256, (3, 3), activation='relu', padding='same'),\n","    BatchNormalization(),\n","    Conv2D(256, (3, 3), activation='relu', padding='same'),\n","    BatchNormalization(),\n","    MaxPooling2D(pool_size=(2, 2)),\n","    Dropout(0.4),\n","\n","    Flatten(),\n","    Dense(256, activation='relu'),\n","    BatchNormalization(),\n","    Dropout(0.5),\n","    Dense(num_classes, activation='softmax')\n","])\n","\n","model.compile(optimizer=Adam(learning_rate=1e-4),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"x1N1vTgQp2sd","outputId":"cdab335f-af30-4760-a86d-ac014e14f461"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/30\n","\u001b[1m105/786\u001b[0m \u001b[32m━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m5:20:45\u001b[0m 28s/step - accuracy: 0.3716 - loss: 2.2184"]}],"source":["history = model.fit(\n","    train_generator,\n","    epochs=30,\n","    validation_data=val_generator\n",")\n"]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"T4","provenance":[],"authorship_tag":"ABX9TyNjRcoS1dS5MlxD4ejlMfjk"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}