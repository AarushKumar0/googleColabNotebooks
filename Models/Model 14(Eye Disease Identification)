{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyO8G1ab09VdiAehC+1a2EQP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1lpJAamHKVfY","executionInfo":{"status":"ok","timestamp":1753760987383,"user_tz":240,"elapsed":21811,"user":{"displayName":"Aarush Kumar","userId":"16118659533235147067"}},"outputId":"34a71bfe-f386-4199-f713-9a524161d4f3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"]},{"cell_type":"code","source":["data_dir = '/content/drive/My Drive/eyeDisease/dataset'"],"metadata":{"id":"zLji9iXESyBR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","import random\n","import shutil\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout, BatchNormalization"],"metadata":{"id":"iV4Wmo78S4ag"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","\n","datagen = ImageDataGenerator(\n","    rescale=1./255,\n","    rotation_range=20,\n","    width_shift_range=0.1,\n","    height_shift_range=0.1,\n","    shear_range=0.1,\n","    zoom_range=0.1,\n","    horizontal_flip=True,\n","    fill_mode='nearest',\n","    validation_split=0.2\n",")\n","\n","train_generator = datagen.flow_from_directory(\n","    directory=data_dir,\n","    target_size=(150, 150),\n","    batch_size=32,\n","    class_mode='categorical',\n","    subset='training',\n","    shuffle=True\n",")\n","\n","val_generator = datagen.flow_from_directory(\n","    directory=data_dir,\n","    target_size=(150, 150),\n","    batch_size=32,\n","    class_mode='categorical',\n","    subset='validation',\n","    shuffle=True\n",")\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xb0tZYjNS7PP","executionInfo":{"status":"ok","timestamp":1753761014007,"user_tz":240,"elapsed":7584,"user":{"displayName":"Aarush Kumar","userId":"16118659533235147067"}},"outputId":"dc89271e-2a71-4283-c18f-b3d5facdcf20"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 3376 images belonging to 4 classes.\n","Found 841 images belonging to 4 classes.\n"]}]},{"cell_type":"code","source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout, BatchNormalization\n","from tensorflow.keras.optimizers import Adam\n","\n","num_classes = 4\n","input_shape = (150, 150, 3)\n","\n","model = Sequential([\n","    Conv2D(32, (3,3), activation='relu', input_shape=(150,150,3)),\n","    MaxPooling2D(2,2),\n","\n","    Conv2D(64, (3,3), activation='relu'),\n","    MaxPooling2D(2,2),\n","\n","    Conv2D(128, (3,3), activation='relu'),\n","    MaxPooling2D(2,2),\n","\n","    Flatten(),\n","    Dense(256, activation='relu'),\n","    Dropout(0.5),\n","    Dense(4, activation='softmax')\n","])\n","model.compile(optimizer=Adam(learning_rate=1e-4),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wzdVT--vS9wP","executionInfo":{"status":"ok","timestamp":1753764931478,"user_tz":240,"elapsed":45,"user":{"displayName":"Aarush Kumar","userId":"16118659533235147067"}},"outputId":"db161a5b-6019-4c01-e347-d53c62ecbdf5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]}]},{"cell_type":"code","source":["from tensorflow.keras.callbacks import EarlyStopping\n","from sklearn.utils.class_weight import compute_class_weight\n","import numpy as np\n","\n","class_indices = train_generator.class_indices\n","class_names = list(class_indices.keys())\n","num_classes = len(class_names)\n","\n","labels = train_generator.classes\n","\n","class_weights = compute_class_weight(\n","    class_weight='balanced',\n","    classes=np.unique(labels),\n","    y=labels\n",")\n","class_weights = dict(enumerate(class_weights))\n","\n","early_stop = EarlyStopping(\n","    monitor='val_loss',\n","    patience=3,\n","    restore_best_weights=True\n",")\n","\n","history = model.fit(\n","    train_generator,\n","    epochs=30,\n","    validation_data=val_generator,\n","    callbacks=[early_stop],\n","    class_weight=class_weights\n",")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Js6UdWy_Tilp","executionInfo":{"status":"ok","timestamp":1753765678753,"user_tz":240,"elapsed":742650,"user":{"displayName":"Aarush Kumar","userId":"16118659533235147067"}},"outputId":"593a2a31-14d5-4822-ced1-a037bfd08e55"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m66s\u001b[0m 578ms/step - accuracy: 0.3685 - loss: 1.3124 - val_accuracy: 0.4185 - val_loss: 1.2155\n","Epoch 2/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m60s\u001b[0m 563ms/step - accuracy: 0.4935 - loss: 1.1243 - val_accuracy: 0.4792 - val_loss: 1.1289\n","Epoch 3/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 560ms/step - accuracy: 0.5481 - loss: 1.0418 - val_accuracy: 0.4721 - val_loss: 1.0945\n","Epoch 4/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m56s\u001b[0m 532ms/step - accuracy: 0.5533 - loss: 0.9829 - val_accuracy: 0.5410 - val_loss: 1.0410\n","Epoch 5/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m56s\u001b[0m 526ms/step - accuracy: 0.6003 - loss: 0.9742 - val_accuracy: 0.5696 - val_loss: 1.0104\n","Epoch 6/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m56s\u001b[0m 527ms/step - accuracy: 0.6010 - loss: 0.9247 - val_accuracy: 0.5291 - val_loss: 1.0053\n","Epoch 7/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m57s\u001b[0m 535ms/step - accuracy: 0.6187 - loss: 0.8930 - val_accuracy: 0.4816 - val_loss: 1.0872\n","Epoch 8/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m81s\u001b[0m 528ms/step - accuracy: 0.6222 - loss: 0.9144 - val_accuracy: 0.5315 - val_loss: 1.0083\n","Epoch 9/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m56s\u001b[0m 529ms/step - accuracy: 0.6528 - loss: 0.8372 - val_accuracy: 0.5910 - val_loss: 0.9300\n","Epoch 10/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m57s\u001b[0m 539ms/step - accuracy: 0.6435 - loss: 0.8395 - val_accuracy: 0.5137 - val_loss: 1.0605\n","Epoch 11/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m60s\u001b[0m 568ms/step - accuracy: 0.6573 - loss: 0.8140 - val_accuracy: 0.5493 - val_loss: 0.9865\n","Epoch 12/30\n","\u001b[1m106/106\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m56s\u001b[0m 531ms/step - accuracy: 0.6980 - loss: 0.7602 - val_accuracy: 0.5054 - val_loss: 1.0453\n"]}]}]}